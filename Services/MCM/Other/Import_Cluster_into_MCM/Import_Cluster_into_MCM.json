{
  "service": {
    "specVersion": "v3",
    "version": "2.0.0.0",
    "catalog_metadata": {
      "name": "Import kubernetes cluster",
      "description": "Import an existing kubernetes cluster into a MCM hub-cluster",
      "image": "serviceicon_1.svg",
      "category": "Cluster Lifecycle Services",
      "bullets": [],
      "providerDisplayName": "Other",
      "longDescription": "Imports an existng kubernetes cluster into a MCM hub-cluster",
      "documentationUrl": "https://www.ibm.com/support/knowledgecenter/SS2L37_3.2.1.0/content/cam_content_overview_summary.html",
      "supportUrl": "https://www.ibm.com/support/knowledgecenter/SS2L37_3.2.1.0/cam_ordering_services.html",
      "bindable": false,
      "updatable": "",
      "systemTags": true,
      "author": "admin"
    },
    "tags": [
      {
        "name": "environment",
        "label": "Environment",
        "type": "string",
        "immutable": false,
        "hidden": false,
        "required": true,
        "secured": false,
        "description": "Unique identifer added to the provisioned VMs.",
        "isSystemTag": true,
        "customtype": "string",
        "permission": "Read-Write",
        "options": [
          {
            "label": "Development",
            "value": "dev",
            "default": true
          },
          {
            "label": "Quality Assurance",
            "value": "qa",
            "default": false
          },
          {
            "label": "Production",
            "value": "prod",
            "default": false
          },
          {
            "label": "Test",
            "value": "test",
            "default": false
          }
        ]
      },    
      {
        "name": "request_group",
        "label": "request_group",
        "type": "string",
        "immutable": true,
        "hidden": false,
        "required": false,
        "secured": false,
        "description": "The current context group id of the current user that requested the provisioning of the template. This is important because a user may be part of more than one group and this identifies the context of which group the user made the request.",
        "isSystemTag": true,
        "default": "${svc_instance.group}",
        "customtype": "string",
        "permission": "Read-Only"
      },
      {
        "name": "request_user",
        "label": "request_user",
        "type": "string",
        "immutable": true,
        "hidden": false,
        "required": false,
        "secured": false,
        "description": "The user id of the current user that requested the provisioning of the template.",
        "isSystemTag": true,
        "default": "${svc_instance.owner}",
        "customtype": "string",
        "permission": "Read-Only"
      },
      {
        "name": "service_name",
        "label": "service_name",
        "type": "string",
        "immutable": true,
        "hidden": false,
        "required": false,
        "secured": false,
        "description": "Name provided for the service instance by the end user at time of request",
        "isSystemTag": true,
        "default": "${svc_instance.name}",
        "customtype": "string",
        "permission": "Read-Only"
      },
      {
        "name": "service_identifier",
        "label": "service_identifier",
        "type": "string",
        "immutable": true,
        "hidden": false,
        "required": false,
        "secured": false,
        "description": "Unique identifer generated by ICAM which is mapped to the service instance of the template provisioned.",
        "isSystemTag": true,
        "default": "${svc_instance.service_instance_id}",
        "customtype": "string",
        "permission": "Read-Only"
      }
    ],
    "actions": [
      {
        "type": "provision",
        "name": "Provision",
        "description": "Default action for deployment of service",
        "input_parameters": [
          {
            "name": "cluster_name",
            "label": "Cluster name",
            "customtype": "string",
            "type": "string",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "description": "Name of the cluster to be imported"
          },
          {
            "name": "cluster_endpoint",
            "label": "Cluster endpoint",
            "customtype": "string",
            "type": "string",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "description": "URL for the kubernetes cluster endpoint"
          },
          {
            "name": "cluster_user",
            "label": "Cluster user",
            "customtype": "string",
            "type": "string",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "description": "User name for accessing the cluster"
          },
          {
            "name": "cluster_token",
            "label": "Authorization token",
            "customtype": "string",
            "type": "string",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": true,
            "description": "Token for authenticating with the cluster"
          },
          {
            "name": "cluster_namespace",
            "label": "Cluster namespace",
            "customtype": "string",
            "type": "string",
            "immutable": false,
            "hidden": false,
            "required": false,
            "secured": false,
            "description": "Namespace on the hub cluster into which the target cluster will be imported; Defaults to cluster name"
          },
          {
            "name": "image_registry",
            "label": "Image registry",
            "customtype": "string",
            "type": "string",
            "immutable": false,
            "hidden": false,
            "required": false,
            "secured": false,
            "description": "URL for private docker registry from which klusterlet images will be pulled"
          },
          {
            "name": "image_suffix",
            "label": "Image suffix",
            "customtype": "string",
            "type": "string",
            "immutable": false,
            "hidden": false,
            "required": false,
            "secured": false,
            "description": "Suffix (e.g. platform type) to be appended to image name"
          },
          {
            "name": "image_version",
            "label": "Image version",
            "customtype": "string",
            "type": "string",
            "immutable": false,
            "hidden": false,
            "required": false,
            "secured": false,
            "description": "Version (tag) of the MCM image to be pulled"
          },
          {
            "name": "docker_user",
            "label": "Docker user",
            "customtype": "string",
            "type": "string",
            "immutable": false,
            "hidden": false,
            "required": false,
            "secured": false,
            "description": "Username for authenticating with the private docker registry"
          },
          {
            "name": "docker_password",
            "label": "Docker password",
            "customtype": "string",
            "type": "string",
            "immutable": false,
            "hidden": false,
            "required": false,
            "secured": true,
            "description": "Password for authenticating with the private docker registry"
          }
        ],
        "flow": {
          "conditions": [],
          "templates": [
            {
              "MCM Klusterlet within Kubernetes cluster for Terraform 0.12.x": {
                "title": "MCM Klusterlet within Kubernetes cluster for Terraform 0.12.x",
                "template_name": "MCM Klusterlet within Kubernetes cluster for Terraform 0.12.x",
                "version": "5.0.0",
                "id": "importkucc2bc96e",
                "template_type": "Terraform",
                "template_content_type": "Other",
                "template_provider": "Other",
                "instance_name": "",
                "cloud_connection_name": "Other",
                "template_data_objects": {
                  "bastionhost": "DefaultNoBastionHostRequired",
                  "mcm_controller": "mcmcontroller"
                },
                "template_params": {
                  "mcm_url": "${mcm_controller.icp_url}",
                  "mcm_admin_user": "${mcm_controller.icp_admin_user}",
                  "mcm_admin_password": "${mcm_controller.icp_admin_password}",
                  "cluster_name": "${input_parameters.cluster_name}",
                  "cluster_namespace": "${input_parameters.cluster_namespace}",
                  "cluster_endpoint": "${input_parameters.cluster_endpoint}",
                  "cluster_user": "${input_parameters.cluster_user}",
                  "cluster_token": "${input_parameters.cluster_token}",
                  "image_registry": "${input_parameters.image_registry}",
                  "image_suffix": "${input_parameters.image_suffix}",
                  "image_version": "${input_parameters.image_version}",
                  "docker_user": "${input_parameters.docker_user}",
                  "docker_password": "${input_parameters.docker_password}"
                },
                "outputs": [],
                "error": false,
                "immutable": false,
                "provider_engine_version": "0.12.21"
              }
            }
          ],
          "resthooks": [],
          "notifications": [],
          "sequence": {
            "0": "importkucc2bc96e"
          },
          "error_sequence": {}
        },
        "output_parameters": []
      }
    ],
    "plans": [
      {
        "name": "Standard",
        "description": "To deploy a Standard plan",
        "actions": [],
        "plan_parameters": []
      }
    ]
  }
}
